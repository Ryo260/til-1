## QiitaのアンチTDD記事で非常に良いコメントがあったためメモ

```
それは『TDDとは限定的な状況でのみ有用な手法であり、一般的には工数が増える』とは言わないのでしょうか？

と

ただ、『成功例の方が圧倒的に少ない』ということは認識してほしいですね。

についてコメントさせて下さい。

この手の議論において"一般的"や"少ない"(もしくは"多い")という言葉を使うと、
発言者のバックグラウンドや観測範囲に強く依存してしまい、水掛け論になりがちです。

僕は先にも述べている通り、TDDの導入がうまくいっていない現場の存在を否定はしていませんし、
それをうまくいっていないからと咎めるつもりもありません。
むしろ、なぜその現場で導入が難しいのか、どうすればうまくいくのかを考えたいと思っています。
ただそれを考える機会すら与えてもらえず、「TDDは多くの場合有用ではない」と結論づけられているのが悲しいのです。

本当に「多くの場合有用ではない」のか、「成功例の方が圧倒的に少ない」のかについても、
正直なところ反論するつもりも議論の対象にするつもりもありません。(水掛け論にしかならないため)
世の中に開発現場は星の数ほどあり、例えばそれらすべてにTDDと非TDDで開発をしてもらって、
その違いを探るというような調査をすることは現実ではありませんし、
それをやる意義もないと思いますので、基本的にこれは証明不可能です。

こういった調査は少なからず実施されていると思うのですが、
僕が知っている範囲でのそれらの結果はすでに「学術の組織内という箱庭の中での研究結果」
ないし、「世界的に優秀なエンジニア集団の結果」として否定されているので、
正直これ以上の統計的根拠は提示できません。
（あくまで僕が知っている範囲での話ですので、他の方でもし良い文献をご存じの方がいらっしゃれば是非お願いします。）

統計的な証明が困難だからこそ、個々人の経験や現場の声、導入事例が重要だと思っており、
それを一般化しようとしていることが僕にとっては一番気がかりな点です。

ですので、例えばおっしゃって頂いた「派遣や外注の方を開発人員として多く抱えているプロジェクト」のくだりは、
（僕自身にそういった現場での開発経験がないので完全に納得できてはいませんが）なるほどとは思いました。ありがとうございます。

「一般的に」とか「多くの開発現場では」などの言葉が使われているから僕も多少感情的になってしまったところがあるかもしれません。
そうだとしたら申し訳ないと思いますが、ただそれはそういった過度の一般化をせずに、
あなた自身の経験においてどういう風にTDDを実践し、
なぜそれが有用ではないと判断したかという事ことを知りたいと思ったことの結果ですのでご容赦ください。
無理に一般化するよりも、多くの開発現場のうちの一つの事例として話をされたほうが建設的な議論ができるかと思うのです。

ちなみに。
僕はある概念や言葉があった場合、基本的にはその概念や言葉の提唱者、エバンジェリストと呼ばれる方々の意見・発言を尊重します。
「TDD」においてはTDD by Example (翻訳版：テスト駆動開発入門）の著者である Kent Bec k氏や、
Refactor ing（翻訳版：リファクタリング）の著者として有名な Martin Fowloer 氏、国内だと t_wada さんがその人たちになります。
（もちろん他にも多くの方々が TDD の発展に貢献されていますが、代表的な型の名前を挙げさせていただきました。)
こういった方々が自らその概念や方法論に終止符をうつならまだしも、
そうではなくその可能性を信じ推進し続けているのであれば、それらを使いこなせないほうこそが「限定的な状況」であり、
そちらを「一般的」とは思いたくありません。（これはTDDに限らず、すべての物事に関してそう考えています。）
こう考えているのは僕だけかもしれないですし、他の方が同じような考え方をするべきだとも思いません
（同じような考え方をして”欲しい”とは思います）が、少なくとも僕の発言はこのような考えにもとづいてなされていますので、
それについてはご理解いただければと思います。

もちろん、真剣にTDDを学び、必死に導入の努力をして、それでもコストに見合わず、
結果的にうまくいかなかったということは多々あると思います。
ただ、どうかそれを「TDDは有用でない」と思わずに、「ある状況下においてTDDの導入に失敗した」と捉えていただきたいですし、
願わくばそういった事例をどんどん共有していただきたいです。
そういった現場の事例を共有しあった先にこそ、よりよいTDDがあるのではないかと思います。
（そのときこそ本当にTDDが死ぬかもしれませんね。）
```
